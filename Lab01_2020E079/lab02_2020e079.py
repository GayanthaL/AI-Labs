# -*- coding: utf-8 -*-
"""Lab02_2020E079.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vXWeUaYeb0quIMeaL2-tJuimVREEleJG
"""

!pip install fuzzywuzzy

# import the spell check module
from spellcheck import SpellCheck

# create an object
spell_check = SpellCheck('words.txt')

# set the string
string_to_be_checked = "wid erea"
spell_check.check(string_to_be_checked)

# print suggestions and correction
print (spell_check.suggestions())
print (spell_check.correct())

# Import the spell check module (assuming the CustomizedSpellCheck class is in spellcheck.py)
from customizedspellcheck import CustomizedSpellCheck

# Create an object of CustomizedSpellCheck with the word dictionary
spell_checker = CustomizedSpellCheck('words.txt')

# Set the string to be checked
string_to_be_checked = "gld narow"
spell_checker.check(string_to_be_checked)

# Get suggestions using the custom heuristic
custom_suggestions = spell_checker.custom_suggestions()

# Print the results
print(f"Input: '{string_to_be_checked}'")
print(f"Custom Suggestions: {custom_suggestions}")

# Implement custom heuristic-based correction
corrected_words = []
for word, suggestion in zip(string_to_be_checked.split(), custom_suggestions):
    corrected_word = suggestion[0] if suggestion else word  # Use the first suggestion or keep the original word
    corrected_words.append(corrected_word)

corrected_string = ' '.join(corrected_words)
print(f"Custom Heuristic Correction: {corrected_string}")

# Import the spell check module for FuzzyWuzzy
from spellcheck import SpellCheck

# Import the customized spell check module
from customizedspellcheck import CustomizedSpellCheck

# Create objects for both spell checkers
fuzzy_spell_check = SpellCheck('words.txt')
custom_spell_checker = CustomizedSpellCheck('words.txt')

# List of sentences to check
sentences_to_check = [
    "The street is wde and busy.",
    "The path is narow and leads to the park.",
    "The open aria is filled with flowers.",
    "The room is so laight and cheerful.",
    "She was gld to see her friends."
]

# Process each sentence
for sentence in sentences_to_check:
    # FuzzyWuzzy Spell Check
    fuzzy_spell_check.check(sentence)
    fuzzy_suggestions = fuzzy_spell_check.suggestions()

    # Create the corrected sentence using FuzzyWuzzy suggestions
    fuzzy_corrected = sentence  # Default to the original sentence
    if fuzzy_suggestions:
        for word in fuzzy_suggestions:
            fuzzy_corrected = fuzzy_corrected.replace(word[0], word[1])  # Replace with the first suggestion

    # Custom Heuristic Spell Check
    custom_spell_checker.check(sentence)
    custom_suggestions = custom_spell_checker.custom_suggestions()

    # Prepare Custom Heuristic Correction with preserved spaces
    corrected_words = []
    sentence_words = sentence.split()

    for i, word in enumerate(sentence_words):
        if i < len(custom_suggestions):
            suggestion = custom_suggestions[i]  # Get the suggestions for the current word
            corrected_word = suggestion[0] if suggestion else word  # Use the first suggestion or keep the original word
        else:
            corrected_word = word  # If no suggestion, keep the original word
        corrected_words.append(corrected_word)

    corrected_string = ' '.join(corrected_words)  # Combine words back into a single string

    # Display custom heuristic suggestions with correct spaces
    custom_suggestion_display = []
    for i in range(len(sentence_words)):
        if i < len(custom_suggestions):
            custom_suggestion_display.append(custom_suggestions[i])  # Add the suggestions for display
        else:
            custom_suggestion_display.append([])  # No suggestions for this word

    # Print Results
    print(f"Original Sentence: {sentence}")
    print(f"FuzzyWuzzy Suggestions: {fuzzy_suggestions}")
    print(f"FuzzyWuzzy Correction: {fuzzy_corrected}")
    print(f"Custom Heuristic Suggestions: {custom_suggestion_display}")  # Print the suggestions
    print(f"Custom Heuristic Correction: {corrected_string}\n")